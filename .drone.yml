kind: pipeline
type: docker
name: default

steps:
- name: restore-cache
  image: drillster/drone-volume-cache
  volumes:
  - name: cache
    path: /cache
  settings:
    restore: true
    mount:
    - ./.pnpm-store

- name: build
  image: node:14-buster
  environment:
    DB_HOST: db
    DB_PORT: 5432
    DB_DATABASE: main
    DB_USERNAME: main
    DB_PASSWORD: main
    JWT_SECRET: secret-key
  commands:
  - curl -f https://get.pnpm.io/v6.7.js | node - add --global pnpm@6
  - pnpm config set store-dir .pnpm-store
  - pnpm i && pnpm lint
  - sleep 10 # Wait for PostgreSQL service starting
  - pnpm test
  - pnpm build

- name: image
  image: plugins/docker
  settings:
    registry: registry.okami101.io
    repo: registry.okami101.io/adr1enbe4udou1n/nestjs-realworld
    tags: latest
    username:
      from_secret: registry_username
    password:
      from_secret: registry_password

- name: rebuild-cache
  image: drillster/drone-volume-cache
  volumes:
  - name: cache
    path: /cache
  settings:
    rebuild: true
    mount:
    - ./.pnpm-store

# - name: deploy
#   image: appleboy/drone-ssh
#   settings:
#     host: front.okami101.io
#     port: 2222
#     username: okami
#     key:
#       from_secret: swarm_ssh_key
#     script:
#       - docker service update --image registry.okami101.io/adr1enbe4udou1n/nestjs-realworld:latest nestjs-realworld_app --with-registry-auth

services:
- name: db
  image: postgres:13
  environment:
    POSTGRES_USER: main
    POSTGRES_PASSWORD: main
    POSTGRES_DB: main

trigger:
  event:
  - push
  - pull_request
