// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int               @id @default(autoincrement())
  name             String
  email            String            @unique
  password         String?
  bio              String?
  image            String?
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  articles         Article[]
  comments         Comment[]
  favoriteArticles ArticleFavorite[]
  following        FollowerUser[]    @relation("following")
  followers        FollowerUser[]    @relation("followers")
}

model FollowerUser {
  followerId  Int
  follower    User @relation("followers", fields: [followerId], references: [id])
  followingId Int
  following   User @relation("following", fields: [followingId], references: [id])

  @@id([followerId, followingId])
}

model Article {
  id           Int               @id @default(autoincrement())
  authorId     Int
  author       User              @relation(fields: [authorId], references: [id], onDelete: Cascade)
  title        String
  slug         String            @unique
  description  String
  body         String
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
  comments     Comment[]
  tags         ArticleTag[]
  favoredUsers ArticleFavorite[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  articleId Int
  article   Article  @relation(fields: [articleId], references: [id], onDelete: Cascade)
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tag {
  id       Int          @id @default(autoincrement())
  name     String       @unique
  articles ArticleTag[]
}

model ArticleTag {
  articleId Int
  article   Article @relation(fields: [articleId], references: [id], onDelete: Cascade)
  tagId     Int
  tag       Tag     @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@id([articleId, tagId])
}

model ArticleFavorite {
  articleId Int
  article   Article @relation(fields: [articleId], references: [id], onDelete: Cascade)
  userId    Int
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([articleId, userId])
}
